@import '../styles/mixins';
@import '../styles/variables';

@mixin control-button {
  $button-size: 45px;
  @include button { @content; }
  -webkit-app-region: no-drag;
  text-align: center;
  width: $button-size;
  height: $button-size;
  display: inline-block;
}

.container {
  height: 100%;
  display: flex;
  flex-direction: column;
}

.header {
  @include card-2();
  -webkit-app-region: drag;
  align-items: center;
  display: flex;
  height: 60px;
  padding: 0 $gutter;
  position: relative;
  z-index: 1;

  h1 {
    flex-grow: 1;
    font-size: 1.75em;
  }
}

.searchInput {
  $width: 45px;
  -webkit-app-region: no-drag;
  align-items: center;
  display: flex;
  position: relative;
  min-width: $width;
  transition: width .3s ease-in;

  i {
    position: absolute;
    right: calc(#{$width} / 2);
    transform: translateX(50%);
  }

  input {
    @include input(0);
    transition: all .3s ease-in;

    &:valid,
    &:focus {
      width: 250px + $width;
      padding-left: 10px;
      padding-right: $width;

      + i {
        pointer-events: none;
      }
    }

    &:not(:focus)::placeholder {
      color: transparent;
    }
  }
}

.button {
  @include control-button;
}

.main {
  flex: 1;
  overflow: auto;
}

.controls {
  display: flex;
}

.appMenuContainer {
  position: relative;
}

.appMenuButton {
  align-items: center;
  @include control-button {
    display: flex;
  }

  & + input {
    display: none;

    &:checked ~ .appMenu {
      display: flex;
    }
  }
}

.appMenu {
  @include card-3;
  display: none;
  flex-direction: column;
  position: absolute;
  padding: 10px 0;
  right: 0;
  top: 100%;

  button {
    @include button {
      display: flex;
      box-shadow: none;
    }
    align-items: center;
    text-align: left;
    white-space: nowrap;

    &:before {
      $icon-size: 1em;
      @include material-icon;
      color: $darker;
      content: '';
      display: inline-block;
      text-align: center;
      height: $icon-size;
      width: $icon-size;
      margin-right: 10px;
    }

    &.toggled:before {
      color: inherit;
      content: 'done';
    }

    &.sync:before {
      content: 'sync'
    }

    &.clear:before {
      content: 'clear'
    }
  }
}

